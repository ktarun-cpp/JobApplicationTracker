package com.sunbeam.controller;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.HttpStatusCode;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.sunbeam.dto.ApiResponse;
import com.sunbeam.dto.CourseDTO;
import com.sunbeam.dto.CourseDTOupdate;
import com.sunbeam.entities.Course;
import com.sunbeam.service.CourseService;
import com.sunbeam.service.CourseServiceImpl;

import lombok.AllArgsConstructor;

@RestController
@AllArgsConstructor
@RequestMapping("/course")
public class CourseController {
//depcy
	//ctor DI
	private final CourseService courseService;
	
	//Add a new Course
	@PostMapping
	public ResponseEntity<?> addCourse(@RequestBody CourseDTO dto){
		return ResponseEntity.status(HttpStatus.CREATED)
				.body(courseService.addCourse(dto));
	}
	//Cancel Course 
   // - i/p course id
	@DeleteMapping("/{id}")
public ResponseEntity<?> deleteCourse(@PathVariable Long id)
{
		courseService.deleteCourse(id);
		return ResponseEntity.status(HttpStatus.OK)
				.body(new ApiResponse("done"));

}
	//Update Course Details 
   // - i/p course id n new (Start Date, End Date, Fees)
	@PutMapping("/{id}")
	public ResponseEntity<?> updateCourse(@RequestBody CourseDTOupdate dto,@PathVariable Long id){
		return ResponseEntity.status(HttpStatus.OK)
				.body(courseService.courseUpdate(dto,id));
	}
	 
}
